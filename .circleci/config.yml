version: 2
jobs:
  test-default:
    docker:
      - image: cimg/rust:1.57.0
    steps:
      - checkout
      - run:
          name: Install OpenSSL
          command: sudo apt-get update && sudo apt-get install -y libssl-dev
      - run:
          name: Install redis centralized
          command: tests/scripts/install_redis_centralized.sh
      - run:
          name: Install redis cluster
          command: tests/scripts/install_redis_clustered.sh
      - run:
          name: Clear the cargo git cache
          command: rm -rf ~/.cargo/git/* && rm -rf ~/.cargo/registry/cache/*
      - run:
          name: Run tests with default features
          command: cargo clean && eval `ssh-agent` && ssh-add ~/.ssh/id_rsa && tests/runners/default-features.sh
  test-no-features:
    docker:
      - image: cimg/rust:1.57.0
    steps:
      - checkout
      - run:
          name: Install OpenSSL
          command: sudo apt-get update && sudo apt-get install -y libssl-dev
      - run:
          name: Install redis centralized
          command: tests/scripts/install_redis_centralized.sh
      - run:
          name: Install redis cluster
          command: tests/scripts/install_redis_clustered.sh
      - run:
          name: Clear the cargo git cache
          command: rm -rf ~/.cargo/git/* && rm -rf ~/.cargo/registry/cache/*
      - run:
          name: Run tests with no features
          command: cargo clean && eval `ssh-agent` && ssh-add ~/.ssh/id_rsa && tests/runners/no-features.sh
  test-all-features:
    docker:
      - image: cimg/rust:1.57.0
    steps:
      - checkout
      - run:
          name: Install redis centralized
          command: tests/scripts/install_redis_centralized.sh
      - run:
          name: Install redis cluster
          command: tests/scripts/install_redis_clustered.sh
      - run:
          name: Clear the cargo git cache
          command: rm -rf ~/.cargo/git/* && rm -rf ~/.cargo/registry/cache/*
      - run:
          name: Run tests with all features
          command: cargo clean && eval `ssh-agent` && ssh-add ~/.ssh/id_rsa && tests/runners/all-features.sh
  test-sentinel:
    docker:
      - image: cimg/rust:1.57.0
    steps:
      - checkout
      - run:
          name: Install OpenSSL
          command: sudo apt-get update && sudo apt-get install -y libssl-dev
      - run:
          name: Install redis-cli for debugging
          command: .circleci/install_redis_cli.sh
      - run:
          name: Install Docker Compose
          environment:
            COMPOSE_VERSION: '1.29.2'
          command: |
            curl -L "https://github.com/docker/compose/releases/download/${COMPOSE_VERSION}/docker-compose-$(uname -s)-$(uname -m)" -o ~/docker-compose
            chmod +x ~/docker-compose
            sudo mv ~/docker-compose /usr/local/bin/docker-compose
      - setup_remote_docker
      - run:
          name: Setup sentinel redis via docker-compose
          command: tests/scripts/docker-install-redis-sentinel.sh
      - run:
          name: Clear the cargo git cache
          command: rm -rf ~/.cargo/git/* && rm -rf ~/.cargo/registry/cache/*
      - run:
          name: Run tests with sentinel features
          command: cargo clean && eval `ssh-agent` && ssh-add ~/.ssh/id_rsa && tests/runners/sentinel-features.sh

workflows:
  version: 2
  build:
    jobs:
      - test-default
      - test-all-features
      - test-no-features
      - test-sentinel