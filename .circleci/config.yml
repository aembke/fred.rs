version: 2.1

# CI cred rotation counter = 3
# have to use the machine executor to mount volumes
commands:
  restore-cargo-deps-cache:
    steps:
      - restore_cache:
          name: Restore cargo dependencies cache
          key: cargo-cache-stable-{{ .Environment.CACHE_VERSION }}-{{ arch }}
  save-cargo-deps-cache:
    steps:
      - save_cache:
          name: Save cargo dependencies cache
          key: cargo-cache-stable-{{ .Environment.CACHE_VERSION }}-{{ arch }}-{{ epoch }}
          paths:
            - "/home/circleci/.cargo/registry"
            - "/home/circleci/project/target"
  setup-empty-registry:
    steps:
      - run:
          name: Create empty cargo registry
          command: mkdir -p /home/circleci/.cargo/registry
  clear_git_cache:
    steps:
      - run:
          name: Clear the cargo git cache
          command: rm -rf ~/.cargo/git/* && rm -rf ~/.cargo/registry/cache/*
  build_docs:
    steps:
      - run:
          name: Install nightly
          command: rustup install nightly
      - run:
          name: Build documentation
          command: tests/doc.sh
  test_mocks:
    steps:
      - run:
          name: Run mock tests
          command: cargo test --lib --features "mocks i-keys" --no-default-features
  test_default_features:
    steps:
      - checkout
      - restore-cargo-deps-cache
      - run:
          name: Run tests with default features
          command: source tests/environ && tests/runners/default-features.sh
      - save-cargo-deps-cache
  test_all_features:
    steps:
      - checkout
      - restore-cargo-deps-cache
      - run:
          name: Run tests with all features
          command: source tests/environ && tests/runners/all-features.sh
      - save-cargo-deps-cache
  test_redis_stack:
    steps:
      - checkout
      - restore-cargo-deps-cache
      - run:
          name: Run tests with redis-stack features
          command: source tests/environ && tests/runners/redis-stack.sh
      - save-cargo-deps-cache
  test_no_features:
    steps:
      - checkout
      - restore-cargo-deps-cache
      - run:
          name: Run tests with no features
          command: source tests/environ && tests/runners/no-features.sh
      - save-cargo-deps-cache
  test_sentinel:
    steps:
      - checkout
      - restore-cargo-deps-cache
      - run:
          name: Install and run sentinel tests
          command: source tests/environ && tests/runners/sentinel-features.sh
      - save-cargo-deps-cache
  test_tls_cluster:
    steps:
      - checkout
      - restore-cargo-deps-cache
      - run:
          name: Run cluster tests with native-tls features
          command: source tests/environ && tests/scripts/tls-creds.sh && tests/runners/cluster-native-tls.sh
      - save-cargo-deps-cache
  test_rustls_cluster:
    steps:
      - checkout
      - restore-cargo-deps-cache
      - run:
          name: Run cluster tests with rustls features
          command: source tests/environ && tests/scripts/tls-creds.sh && tests/runners/cluster-rustls.sh
      - save-cargo-deps-cache
  test_rustls_cluster_ring:
    steps:
      - checkout
      - restore-cargo-deps-cache
      - run:
          name: Run cluster tests with rustls/ring features
          command: source tests/environ && tests/scripts/tls-creds.sh && tests/runners/cluster-rustls-ring.sh
      - save-cargo-deps-cache
  test_default_nil_types_features:
    steps:
      - checkout
      - restore-cargo-deps-cache
      - run:
          name: Run tests with default-nil-types features
          command: source tests/environ && tests/runners/default-nil-types.sh
      - save-cargo-deps-cache
  test_unix_socket:
    steps:
      - checkout
      - restore-cargo-deps-cache
      - run:
          name: Run tests with unix socket features
          command: source tests/environ && tests/runners/unix-socket.sh
      - save-cargo-deps-cache
  test_valkey:
    steps:
      - checkout
      - restore-cargo-deps-cache
      - run:
          name: Run tests against local valkey deployments
          command: source tests/environ && tests/runners/valkey-all-features.sh
      - save-cargo-deps-cache

jobs:
  test-default-nil-types-7:
    machine:
      image: ubuntu-2204:2022.10.2
      docker_layer_caching: true
    resource_class: medium
    environment:
      REDIS_VERSION: 7.4.0
    steps:
      - test_default_nil_types_features
  test-default-7:
    machine:
      image: ubuntu-2204:2022.10.2
      docker_layer_caching: true
    resource_class: medium
    environment:
      REDIS_VERSION: 7.4.0
    steps:
      - test_default_features
  test-unix-socket-7:
    machine:
      image: ubuntu-2204:2022.10.2
      docker_layer_caching: true
    resource_class: medium
    environment:
      REDIS_VERSION: 7.4.0
    steps:
      - test_unix_socket
  test-redis-stack-7:
    machine:
      image: ubuntu-2204:2022.10.2
      docker_layer_caching: true
    resource_class: medium
    environment:
      REDIS_VERSION: 7.4.0
    steps:
      - test_redis_stack
  test-no-features-7:
    machine:
      image: ubuntu-2204:2022.10.2
      docker_layer_caching: true
    resource_class: medium
    environment:
      REDIS_VERSION: 7.4.0
    steps:
      - test_no_features
  test-all-features-7:
    machine:
      image: ubuntu-2204:2022.10.2
      docker_layer_caching: true
    resource_class: medium
    environment:
      REDIS_VERSION: 7.4.0
    steps:
      - test_all_features
  test-cluster-tls-features-7:
    machine:
      image: ubuntu-2204:2022.10.2
      docker_layer_caching: true
    resource_class: medium
    environment:
      REDIS_VERSION: 7.4.0
      FRED_CI_TLS: true
    steps:
      - test_tls_cluster
  test-cluster-rustls-features-7:
    machine:
      image: ubuntu-2204:2022.10.2
      docker_layer_caching: true
    resource_class: medium
    environment:
      REDIS_VERSION: 7.4.0
      FRED_CI_TLS: true
    steps:
      - test_rustls_cluster
  test-cluster-rustls-ring-features-7:
    machine:
      image: ubuntu-2204:2022.10.2
      docker_layer_caching: true
    resource_class: medium
    environment:
      REDIS_VERSION: 7.4.0
      FRED_CI_TLS: true
    steps:
      - test_rustls_cluster_ring
  test-sentinel-7:
    machine:
      image: ubuntu-2204:2022.10.2
      docker_layer_caching: true
    resource_class: medium
    environment:
      REDIS_VERSION: 7.4.0
    steps:
      - test_sentinel
  test-valkey-7:
    machine:
      image: ubuntu-2204:2022.10.2
      docker_layer_caching: true
    resource_class: medium
    environment:
      REDIS_VERSION: 7.4.0
      VALKEY_VERSION: 7.2.5
    steps:
      - test_valkey
  test-misc:
    docker:
      - image: cimg/rust:1.80
    environment:
      CARGO_NET_GIT_FETCH_WITH_CLI: true
    steps:
      - checkout
      - build_docs
      - test_mocks
      - run:
          name: Check partial tracing
          command: cargo check --features partial-tracing
  check-all-interface-features:
    docker:
      - image: rust:1.80-slim-bullseye
    environment:
      CARGO_NET_GIT_FETCH_WITH_CLI: true
      YQ_VERSION: v4.44.3
    steps:
      - checkout
      - run:
          name: Install build dependencies
          command: |
            apt-get update && apt-get install -y build-essential libssl-dev pkg-config git wget 
            wget -qO /usr/local/bin/yq https://github.com/mikefarah/yq/releases/download/${YQ_VERSION}/yq_linux_amd64
            chmod +x /usr/local/bin/yq
            rustup component add clippy
      - run:
          name: Check all features
          command: tests/scripts/check_features.sh
      - run:
          name: Check all Glommio features
          command: tests/scripts/check_glommio_features.sh
  clippy-lint:
    docker:
      - image: rust:1.80-slim-bullseye
    environment:
      CARGO_NET_GIT_FETCH_WITH_CLI: true
    steps:
      - checkout
      - run:
          name: Install build dependencies
          command: apt-get update && apt-get install -y build-essential libssl-dev pkg-config git
      - run:
          name: Install clippy
          command: rustup component add clippy
      - run:
          name: Clippy Tokio features
          command: |
            cargo clippy --features "i-all i-redis-stack transactions blocking-encoding dns metrics mocks monitor \
              replicas sentinel-auth sentinel-client serde-json subscriber-client unix-sockets credential-provider \
              enable-rustls enable-native-tls full-tracing" --lib -p fred -- -Dwarnings
      - run:
          name: Clippy Glommio features
          command: |
            cargo clippy --features "i-all i-redis-stack transactions blocking-encoding dns metrics mocks monitor \
              replicas sentinel-auth sentinel-client serde-json subscriber-client glommio credential-provider \
              enable-rustls enable-native-tls full-tracing" --lib -p fred -- -Dwarnings
  cargo-fmt:
    docker:
      - image: cimg/rust:1.80
    environment:
      CARGO_NET_GIT_FETCH_WITH_CLI: true
    steps:
      - checkout
      - run:
          name: Install nightly toolchain
          command: rustup toolchain install nightly
      - run:
          name: Cargo fmt
          command: cargo +nightly fmt --all --check

workflows:
  version: 2
  build:
    jobs:
      - test-default-7
      - test-all-features-7
      - test-no-features-7
      - test-default-nil-types-7
      - test-redis-stack-7
      - test-sentinel-7
      - test-unix-socket-7
      - test-valkey-7
      - test-misc
      - test-cluster-tls-features-7
      - test-cluster-rustls-features-7
      - test-cluster-rustls-ring-features-7
      - clippy-lint
      - cargo-fmt
      - check-all-interface-features
