version: 2.1

# CI cred rotation counter = 3
# have to use the machine executor to mount volumes
commands:
  restore-cargo-deps-cache:
    steps:
      - restore_cache:
          name: Restore cargo dependencies cache
          key: cargo-cache-stable-{{ .Environment.CACHE_VERSION }}-{{ arch }}
  save-cargo-deps-cache:
    steps:
      - save_cache:
          name: Save cargo dependencies cache
          key: cargo-cache-stable-{{ .Environment.CACHE_VERSION }}-{{ arch }}-{{ epoch }}
          paths:
            - "/home/circleci/.cargo/registry"
            - "/home/circleci/project/target"
  setup-empty-registry:
    steps:
      - run:
          name: Create empty cargo registry
          command: mkdir -p /home/circleci/.cargo/registry
  clear_git_cache:
    steps:
      - run:
          name: Clear the cargo git cache
          command: rm -rf ~/.cargo/git/* && rm -rf ~/.cargo/registry/cache/*
  build_docs:
    steps:
      - run:
          name: Install nightly
          command: rustup install nightly
      - run:
          name: Build documentation
          command: tests/doc.sh
  test_default_features:
    steps:
      - checkout
      - restore-cargo-deps-cache
      - run:
          name: Run tests with default features
          command: source tests/environ && tests/runners/default-features.sh
      - save-cargo-deps-cache
  test_all_features:
    steps:
      - checkout
      - restore-cargo-deps-cache
      - run:
          name: Run tests with all features
          command: source tests/environ && tests/runners/all-features.sh
      - save-cargo-deps-cache
  test_no_features:
    steps:
      - checkout
      - restore-cargo-deps-cache
      - run:
          name: Run tests with no features
          command: source tests/environ && tests/runners/no-features.sh
      - save-cargo-deps-cache
  test_sentinel:
    steps:
      - checkout
      - restore-cargo-deps-cache
      - run:
          name: Install and run sentinel tests
          command: source tests/environ && tests/runners/sentinel-features.sh
      - save-cargo-deps-cache
  test_tls_cluster:
    steps:
      - checkout
      - restore-cargo-deps-cache
      - run:
          name: Run cluster tests with native-tls features
          command: source tests/environ && tests/scripts/tls-creds.sh && tests/runners/cluster-native-tls.sh
      - save-cargo-deps-cache
  test_rustls_cluster:
    steps:
      - checkout
      - restore-cargo-deps-cache
      - run:
          name: Run cluster tests with rustls features
          command: source tests/environ && tests/scripts/tls-creds.sh && tests/runners/cluster-rustls.sh
      - save-cargo-deps-cache

jobs:
  test-default-7_0:
    machine:
      image: ubuntu-2204:2022.10.2
      docker_layer_caching: true
    resource_class: medium
    environment:
      REDIS_VERSION: 7.0.9
    steps:
      - test_default_features
  test-no-features-7_0:
    machine:
      image: ubuntu-2204:2022.10.2
      docker_layer_caching: true
    resource_class: medium
    environment:
      REDIS_VERSION: 7.0.9
    steps:
      - test_no_features
  test-all-features-7_0:
    machine:
      image: ubuntu-2204:2022.10.2
      docker_layer_caching: true
    resource_class: medium
    environment:
      REDIS_VERSION: 7.0.9
    steps:
      - test_all_features
  test-cluster-tls-features-7_0:
    machine:
      image: ubuntu-2204:2022.10.2
      docker_layer_caching: true
    resource_class: medium
    environment:
      REDIS_VERSION: 7.0.9
      FRED_CI_TLS: true
    steps:
      - test_tls_cluster
  test-cluster-rustls-features-7_0:
    machine:
      image: ubuntu-2204:2022.10.2
      docker_layer_caching: true
    resource_class: medium
    environment:
      REDIS_VERSION: 7.0.9
      FRED_CI_TLS: true
    steps:
      - test_rustls_cluster
  test-default-6_2:
    machine:
      image: ubuntu-2204:2022.10.2
      docker_layer_caching: true
    resource_class: medium
    environment:
      REDIS_VERSION: 6.2.2
    steps:
      - test_default_features
  test-no-features-6_2:
    machine:
      image: ubuntu-2204:2022.10.2
      docker_layer_caching: true
    resource_class: medium
    environment:
      REDIS_VERSION: 6.2.2
    steps:
      - test_no_features
  test-all-features-6_2:
    machine:
      image: ubuntu-2204:2022.10.2
      docker_layer_caching: true
    resource_class: medium
    environment:
      REDIS_VERSION: 6.2.2
    steps:
      - test_all_features
  test-sentinel-6_2:
    machine:
      image: ubuntu-2204:2022.10.2
      docker_layer_caching: true
    resource_class: medium
    environment:
      REDIS_VERSION: 6.2.2
    steps:
      - test_sentinel
  test-sentinel-7_0:
    machine:
      image: ubuntu-2204:2022.10.2
      docker_layer_caching: true
    resource_class: medium
    environment:
      REDIS_VERSION: 7.0.9
    steps:
      - test_sentinel
  test-docs:
    docker:
      - image: cimg/rust:1.68.0
    environment:
      CARGO_NET_GIT_FETCH_WITH_CLI: true
    steps:
      - checkout
      - build_docs

workflows:
  version: 2
  build:
    jobs:
      # the older bitnami Redis images require a different process to bootstrap ACL rules...
      #- test-default-6_2
      #- test-all-features-6_2
      #- test-no-features-6_2
      #- test-sentinel-6_2
      - test-default-7_0
      - test-all-features-7_0
      - test-no-features-7_0
      - test-sentinel-7_0
      - test-docs
      - test-cluster-tls-features-7_0
      - test-cluster-rustls-features-7_0