[package]
name = "fred"
version = "4.0.0"
authors = ["Alec Embke <aembke@gmail.com>"]
edition = "2018"
description = "An async Redis client for Rust built on Futures and Tokio."
readme = "README.md"
repository = "https://github.com/aembke/fred.rs"
homepage = "https://github.com/aembke/fred.rs"
keywords = ["redis", "futures", "async", "cluster", "tokio"]
categories = ["asynchronous", "database", "web-programming"]
license = "MIT"

[package.metadata.docs.rs]
all-features = true
rustdoc-args = ["--cfg", "docsrs"]

[dependencies]
tokio = { version = "1.11", features = ["full"] }
bytes = "1.0"
futures = "0.3"
parking_lot = "0.11"
lazy_static = "1.4"
redis-protocol = "3.0"
log = "0.4"
pretty_env_logger = "0.4"
float-cmp = "0.8"
url = "2.2"
native-tls = { version = "0.2", optional = true }
tokio-native-tls = { version = "0.3", optional = true }
rand = "0.8"
tokio-util = { version = "0.6", features = ["codec"] }
tokio-stream = "0.1.5"
indexmap = { version = "1.7", optional = true }
sha-1 = "0.9"
tracing = { version = "0.1", optional = true }
tracing-futures = { version = "0.2", optional = true }
async-trait = "0.1"
semver = "1.0"
nom = { version = "6.1", optional = true }

[dev-dependencies]
prometheus = "0.12"
subprocess = "0.2.7"

[lib]
doc = true
name = "fred"
test = true

[[example]]
name = "resilience"
required-features = ["custom-reconnect-errors"]

[[example]]
name = "basic"
required-features = ["partial-tracing"]

[[example]]
name = "monitor"
required-features = ["monitor"]

[features]
default = ["ignore-auth-error", "pool-prefer-active", "enable-tls"]
metrics = []
ignore-auth-error = []
enable-tls = ["native-tls", "tokio-native-tls"]
vendored-tls = ["enable-tls", "native-tls/vendored"]
mocks = []
reconnect-on-auth-error = []
index-map = ["indexmap"]
pool-prefer-active = []
full-tracing = ["partial-tracing", "tracing", "tracing-futures"]
partial-tracing = ["tracing", "tracing-futures"]
blocking-encoding = ["tokio/rt-multi-thread"]
network-logs = []
custom-reconnect-errors = []
monitor = ["nom"]
# a testing feature to randomly stop, restart, and rebalance the cluster while tests are running
chaos-monkey = ["custom-reconnect-errors"]