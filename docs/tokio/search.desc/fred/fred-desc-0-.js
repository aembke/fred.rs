searchState.loadedDescShard("fred", 0, "Fred\nRedis client implementations.\nShorthand to create a CustomCommand.\nError structs returned by Redis commands.\nTraits that implement portions of the Redis interface.\nA helper macro to wrap a string value in quotes via the …\nAn interface for mocking Redis commands.\nAn interface to run the <code>MONITOR</code> command.\nConvenience module to import a <code>RedisClient</code>, all possible …\nThe structs and enums used by the Redis client.\nVarious client utility functions.\nA cheaply cloneable round-robin client pool that provides …\nSend a series of commands in a pipeline.\nA cheaply cloneable Redis client struct.\nA cheaply cloneable round-robin client pool.\nA struct for interacting with cluster replica nodes.\nA struct for interacting directly with Sentinel nodes.\nA subscriber client that will manage subscription state to …\nA cheaply cloneable transaction block.\nA client interface used to customize command configuration …\nRead the client that should run the next command.\nRead the set of active connections across all clients in …\nSend the pipeline and respond with an array of all …\nRead the underlying RedisClient that interacts with …\nRead the individual clients in the pool.\nRead the clients in the pool.\nCreate a new <code>RedisClient</code> from the config provided to this …\nCreate a new <code>SubscriberClient</code> from the config provided to …\nRead the server ID against which this transaction will …\nConnect each client to the server.\nConnect each client to the server.\nConnect each client to the server, returning the task …\nConnect each client to the server, returning the task …\nExecutes all previously queued commands in a transaction.\nForce a reconnection to the server(s) for each client.\nForce a reconnection to the server(s) for each client.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreate a new pool from an existing set of clients.\nRead the hash slot against which this transaction will …\nIncrementally iterate over pages of the hash map stored at …\nAn ID identifying the underlying transaction state.\nInitialize a new routing and connection task for each …\nInitialize a new routing and connection task for each …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nSend the pipeline and respond with only the result of the …\nRead the client that ran the last command.\nRead the number of commands queued to run.\nSpawn a task that will automatically re-subscribe to any …\nCreate a new pool without connecting to the server.\nCreate a new pool without connecting to the server.\nCreate a new client instance without connecting to the …\nCreate a new client instance without connecting to the …\nCreate a new client instance without connecting to the …\nRead the client that should run the next command.\nRead the next connected client that should run the next …\nRead a mapping of replica server IDs to primary server IDs.\nRead the options that will be applied to commands.\nSend a series of commands in a pipeline.\nSend a series of commands in a pipeline.\nSet whether the client will use next_connected or next …\nClose the connection to the Redis server for each client. …\nClose the connection to the Redis server for each client. …\nCreate a client that interacts with the replica nodes …\nCreate a client that interacts with replica nodes.\nClear the internal command buffer and watched keys.\nRe-subscribe to any tracked channels and patterns.\nIncrementally iterate over a set of keys matching the …\nRun the <code>SCAN</code> command on each primary/main node in a …\nOverride the DNS resolution logic for all clients in the …\nOverride the DNS resolution logic for all clients in the …\nRead the size of the pool.\nRead the size of the pool.\nSplit a clustered Redis client into a set of centralized …\nIncrementally iterate over pages of the set stored at <code>key</code>, …\nSync the cached replica routing table with the server(s).\nCreate a new <code>RedisClient</code>, reusing the existing …\nRead the set of channels that this client will manage.\nRead the set of channel patterns that this client will …\nRead the set of shard channels that this client will …\nSend the pipeline and respond with each individual result.\nUnsubscribe from all tracked channels and patterns, and …\nUpdate the internal PerformanceConfig on each client in …\nUpdate the internal PerformanceConfig on each client in …\nWait for all the clients to connect to the server.\nWait for all the clients to connect to the server.\nSend the <code>WATCH</code> command with the provided keys before …\nRead the number of keys to <code>WATCH</code> before the starting the …\nShorthand to route subsequent commands to the provided …\nIncrementally iterate over pages of the sorted set stored …\nAn authentication error.\nAn error indicating that the caller should apply …\nAn error indicating the request was canceled.\nAn error used to indicate that the cluster’s state has …\nA fatal client configuration error. These errors will …\nAn IO error with the underlying connection.\nAn invalid argument or set of arguments to a command.\nAn invalid command, such as trying to perform a <code>set</code> …\nAn error indicating a value was not found, often used when …\nA parser error.\nA protocol error such as an invalid or unexpected frame …\nAn error from Redis.\nAn enum representing the type of error from Redis.\nAn error associated with a replica node.\nAn error communicating with redis sentinel.\nA timeout error.\nA TLS error.\nAn unknown error.\nAn invalid URL error.\nChange the kind of the error.\nRead details about the error.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nWhether the error is a <code>Canceled</code> error.\nWhether the error is a <code>Cluster</code> error.\nWhether the error is a <code>NotFound</code> error.\nWhether the error is a <code>Replica</code> error.\nRead the type of error without any associated data.\nCreate a new Redis error with the provided details.\nCreate a new empty Canceled error.\nFunctions that implement the ACL interface.\nAn array of frames.\nFunctions for authenticating clients.\nA large number not representable as a <code>Number</code> or <code>Double</code>.\nA blob representing an error.\nA blob of bytes.\nA boolean type.\nOne chunk of a streaming blob.\nFunctions that implement the client interface.\nAny Redis client that implements any part of the Redis …\nFunctions that implement the cluster interface.\nFunctions that implement the config interface.\nA signed 64-bit floating point number.\nContains the error value\nAn interface that exposes various client and connection …\nFunctions that implement the function interface.\nFunctions that implement the geo interface.\nFunctions that implement the hashes interface.\nFunctions that provide a connection heartbeat interface.\nA special frame type used when first connecting to the …\nFunctions that implement the HyperLogLog interface.\nFunctions that implement the generic keys interface.\nFunctions that implement the lists interface.\nFunctions that implement the lua interface.\nAn unordered map of key-value pairs.\nFunctions that implement the memory interface.\nFunctions that implement the internal metrics interface.\nA null type.\nA signed 64-bit integer.\nContains the success value\nFunctions that implement the pubsub interface.\nOut-of-band data.\nA RediSearch interface.\nThe client commands in the RedisJSON interface.\nType alias for <code>Result&lt;T, RedisError&gt;</code>.\nA RESP3 frame that uses Bytes and Str as the underlying …\nFunctions that implement the sentinel interface.\nFunctions that implement the server interface.\nAn unordered collection of other frames with a uniqueness …\nFunctions that implement the sets interface.\nA small string representing an error.\nA small string.\nFunctions that implement the slowlog interface.\nFunctions that implement the sorted sets interface.\nFunctions that implement the streams interface.\nA Redis Timeseries interface.\nA high level interface that supports client side caching …\nFunctions that implement the transactions interface.\nA string to be displayed without any escaping or filtering.\nThe command shows the available ACL categories if called …\nThe command shows the available ACL categories if called …\nDelete all the specified ACL users and terminate all the …\nDelete all the specified ACL users and terminate all the …\nGenerate a password with length <code>bits</code>, returning the …\nGenerate a password with length <code>bits</code>, returning the …\nThe command returns all the rules defined for an existing …\nThe command returns all the rules defined for an existing …\nThe command shows the currently active ACL rules in the …\nThe command shows the currently active ACL rules in the …\nWhen Redis is configured to use an ACL file (with the …\nWhen Redis is configured to use an ACL file (with the …\nRead <code>count</code> recent ACL security events.\nRead <code>count</code> recent ACL security events.\nClear the ACL security events logs.\nClear the ACL security events logs.\nWhen Redis is configured to use an ACL file (with the …\nWhen Redis is configured to use an ACL file (with the …\nCreate an ACL user with the specified rules or modify the …\nCreate an ACL user with the specified rules or modify the …\nThe command shows a list of all the usernames of the …\nThe command shows a list of all the usernames of the …\nReturn the username the current connection is …\nReturn the username the current connection is …\nRead the set of active connections managed by the client.\nRead the set of active connections managed by the client.\nAppend <code>value</code> to <code>key</code> if it’s a string.\nAppend <code>value</code> to <code>key</code> if it’s a string.\nRequest for authentication in a password-protected Redis …\nInstruct Redis to start an Append Only File rewrite …\nInstruct Redis to start an Append Only File rewrite …\nSave the DB in background.\nSave the DB in background.\nThe blocking equivalent of Self::lmove.\nThe blocking equivalent of Self::lmove.\nThe blocking variant of Self::lmpop.\nThe blocking variant of Self::lmpop.\nBLPOP is a blocking list pop primitive. It is the blocking …\nBLPOP is a blocking list pop primitive. It is the blocking …\nBRPOP is a blocking list pop primitive. It is the blocking …\nBRPOP is a blocking list pop primitive. It is the blocking …\nThe blocking equivalent of Self::rpoplpush.\nThe blocking equivalent of Self::rpoplpush.\nThe blocking variant of Self::zmpop.\nThe blocking variant of Self::zmpop.\nThe blocking variant of Self::zpopmax.\nThe blocking variant of Self::zpopmax.\nThe blocking variant of Self::zpopmin.\nThe blocking variant of Self::zpopmin.\nRead the cached cluster state used for routing commands to …\nRead the cached cluster state used for routing commands to …\nCheck if the current Sentinel configuration is able to …\nCheck if the current Sentinel configuration is able to …\nThis command controls the tracking of the keys in the next …\nThis command controls the tracking of the keys in the next …\nRead the config used to initialize the client.\nRead the config used to initialize the client.\nThe CLIENT GETNAME returns the name of the current …\nThe CLIENT GETNAME returns the name of the current …\nThis command returns the client ID we are redirecting our …\nThis command returns the client ID we are redirecting our …\nReturn the ID of the current connection.\nReturn the ID of the current connection.\nThe command returns information and statistics about the …\nThe command returns information and statistics about the …\nClose a given connection or set of connections.\nClose a given connection or set of connections.\nThe CLIENT LIST command returns information and statistics …\nThe CLIENT LIST command returns information and statistics …\nCLIENT PAUSE is a connections control command able to …\nCLIENT PAUSE is a connections control command able to …\nRead the reconnect policy used to initialize the client.\nRead the reconnect policy used to initialize the client.\nThe CLIENT REPLY command controls whether the server will …\nThe CLIENT REPLY command controls whether the server will …\nAssign a name to the current connection.\nAssign a name to the current connection.\nThis command enables the tracking feature of the Redis …\nThis command enables the tracking feature of the Redis …\nThe command returns information about the current client …\nThe command returns information about the current client …\nThis command can unblock, from a different connection, a …\nThis command can unblock, from a different connection, a …\nCLIENT UNPAUSE is used to resume command processing for …\nCLIENT UNPAUSE is used to resume command processing for …\nThis command is useful in order to modify a node’s view …\nThis command is useful in order to modify a node’s view …\nAdvances the cluster config epoch.\nAdvances the cluster config epoch.\nListen for notifications whenever the cluster state …\nThe command returns the number of failure reports for the …\nThe command returns the number of failure reports for the …\nReturns the number of keys in the specified Redis Cluster …\nReturns the number of keys in the specified Redis Cluster …\nThe CLUSTER DELSLOTS command asks a particular Redis …\nThe CLUSTER DELSLOTS command asks a particular Redis …\nThis command, that can only be sent to a Redis Cluster …\nThis command, that can only be sent to a Redis Cluster …\nDeletes all slots from a node.\nDeletes all slots from a node.\nThe command is used in order to remove a node, specified …\nThe command is used in order to remove a node, specified …\nThe command returns an array of keys names stored in the …\nThe command returns an array of keys names stored in the …\nCLUSTER INFO provides INFO style information about Redis …\nCLUSTER INFO provides INFO style information about Redis …\nReturns an integer identifying the hash slot the specified …\nReturns an integer identifying the hash slot the specified …\nCLUSTER MEET is used in order to connect different Redis …\nCLUSTER MEET is used in order to connect different Redis …\nReturns the node’s id.\nReturns the node’s id.\nRead the current cluster node configuration.\nRead the current cluster node configuration.\nThe command provides a list of replica nodes replicating …\nThe command provides a list of replica nodes replicating …\nThe command reconfigures a node as a replica of the …\nThe command reconfigures a node as a replica of the …\nReset a Redis Cluster node, in a more or less drastic way …\nReset a Redis Cluster node, in a more or less drastic way …\nForces a node to save the nodes.conf configuration on disk.\nForces a node to save the nodes.conf configuration on disk.\nThis command sets a specific config epoch in a fresh node.\nThis command sets a specific config epoch in a fresh node.\nCLUSTER SETSLOT is responsible for changing the state of a …\nCLUSTER SETSLOT is responsible for changing the state of a …\nCLUSTER SLOTS returns details about which cluster slots …\nCLUSTER SLOTS returns details about which cluster slots …\nRead the number of buffered commands that have not yet …\nRead the number of buffered commands that have not yet …\nThe CONFIG GET command is used to read the configuration …\nThe CONFIG GET command is used to read the configuration …\nGet the current value of a global Sentinel configuration …\nGet the current value of a global Sentinel configuration …\nResets the statistics reported by Redis using the INFO …\nResets the statistics reported by Redis using the INFO …\nThe CONFIG REWRITE command rewrites the redis.conf file …\nThe CONFIG REWRITE command rewrites the redis.conf file …\nThe CONFIG SET command is used in order to reconfigure the …\nThe CONFIG SET command is used in order to reconfigure the …\nSet the value of a global Sentinel configuration parameter.\nSet the value of a global Sentinel configuration parameter.\nConnect to the server.\nConnect to the server.\nRead the connection config used to initialize the client.\nRead the connection config used to initialize the client.\nRead the connection IDs for the active connections to each …\nRead the connection IDs for the active connections to each …\nThis command copies the value stored at the source key to …\nThis command copies the value stored at the source key to …\nRun a custom command that is not yet supported via another …\nRun a custom command that is not yet supported via another …\nRun a custom command similar to custom, but return the …\nRun a custom command similar to custom, but return the …\nReturn the number of keys in the selected database.\nReturn the number of keys in the selected database.\nDecrements the number stored at <code>key</code> by one. If the key …\nDecrements the number stored at <code>key</code> by one. If the key …\nDecrements the number stored at <code>key</code> by <code>val</code>. If the key …\nDecrements the number stored at <code>key</code> by <code>val</code>. If the key …\nRemoves the specified keys. A key is ignored if it does …\nRemoves the specified keys. A key is ignored if it does …\nSerialize the value stored at <code>key</code> in a Redis-specific …\nSerialize the value stored at <code>key</code> in a Redis-specific …\nReturn a future that will ping the server on an interval.\nListen for protocol and connection errors. This stream can …\nEvaluate a Lua script on the server.\nEvaluate a Lua script on the server.\nEvaluates a script cached on the server side by its SHA1 …\nEvaluates a script cached on the server side by its SHA1 …\nReturns number of keys that exist from the <code>keys</code> arguments.\nReturns number of keys that exist from the <code>keys</code> arguments.\nSet a timeout on key. After the timeout has expired, the …\nSet a timeout on key. After the timeout has expired, the …\nSet a timeout on a key based on a UNIX timestamp.\nSet a timeout on a key based on a UNIX timestamp.\nForce a failover as if the master was not reachable, and …\nForce a failover as if the master was not reachable, and …\nThis command will start a coordinated failover between the …\nThis command will start a coordinated failover between the …\nInvoke a function.\nInvoke a function.\nThis is a read-only variant of the FCALL command that …\nThis is a read-only variant of the FCALL command that …\nDelete the keys in all databases.\nDelete the keys in all databases.\nDelete the keys on all nodes in the cluster. This is a …\nDelete the keys on all nodes in the cluster. This is a …\nForce Sentinel to rewrite its configuration on disk, …\nForce Sentinel to rewrite its configuration on disk, …\nForce a reconnection to the server(s).\nForce a reconnection to the server(s).\nRun a search query on an index, and perform aggregate …\nRun a search query on an index, and perform aggregate …\nAdd an alias to an index.\nAdd an alias to an index.\nRemove an alias from an index.\nRemove an alias from an index.\nAdd an alias to an index. If the alias is already …\nAdd an alias to an index. If the alias is already …\nAdd a new attribute to the index.\nAdd a new attribute to the index.\nRetrieve configuration options.\nRetrieve configuration options.\nSet the value of a RediSearch configuration parameter.\nSet the value of a RediSearch configuration parameter.\nCreate an index with the given specification.\nCreate an index with the given specification.\nDelete a cursor.\nDelete a cursor.\nRead next results from an existing cursor.\nRead next results from an existing cursor.\nAdd terms to a dictionary.\nAdd terms to a dictionary.\nRemove terms from a dictionary.\nRemove terms from a dictionary.\nDump all terms in the given dictionary.\nDump all terms in the given dictionary.\nDelete an index.\nDelete an index.\nReturn the execution plan for a complex query.\nReturn the execution plan for a complex query.\nReturn information and statistics on the index.\nReturn information and statistics on the index.\nReturns a list of all existing indexes.\nReturns a list of all existing indexes.\nSearch the index with a textual query, returning either …\nSearch the index with a textual query, returning either …\nPerform spelling correction on a query, returning …\nPerform spelling correction on a query, returning …\nAdd a suggestion string to an auto-complete suggestion …\nAdd a suggestion string to an auto-complete suggestion …\nDelete a string from a suggestion index.\nDelete a string from a suggestion index.\nGet completion suggestions for a prefix.\nGet completion suggestions for a prefix.\nGet the size of an auto-complete suggestion dictionary.\nGet the size of an auto-complete suggestion dictionary.\nDump the contents of a synonym group.\nDump the contents of a synonym group.\nUpdate a synonym group.\nUpdate a synonym group.\nReturn a distinct set of values indexed in a Tag field.\nReturn a distinct set of values indexed in a Tag field.\nDelete a library and all its functions.\nDelete a library and all its functions.\nDelete a library and all its functions from each cluster …\nDelete a library and all its functions from each cluster …\nReturn the serialized payload of loaded libraries.\nReturn the serialized payload of loaded libraries.\nDeletes all the libraries.\nDeletes all the libraries.\nDeletes all the libraries on all cluster nodes …\nDeletes all the libraries on all cluster nodes …\nKill a function that is currently executing.\nKill a function that is currently executing.\nReturn information about the functions and libraries.\nReturn information about the functions and libraries.\nLoad a library to Redis.\nLoad a library to Redis.\nLoad a library to Redis on all cluster nodes concurrently.\nLoad a library to Redis on all cluster nodes concurrently.\nRestore libraries from the serialized payload.\nRestore libraries from the serialized payload.\nRestore libraries from the serialized payload on all …\nRestore libraries from the serialized payload on all …\nReturn information about the function that’s currently …\nReturn information about the function that’s currently …\nAdds the specified geospatial items (longitude, latitude, …\nAdds the specified geospatial items (longitude, latitude, …\nReturn the distance between two members in the geospatial …\nReturn the distance between two members in the geospatial …\nReturn valid Geohash strings representing the position of …\nReturn valid Geohash strings representing the position of …\nReturn the positions (longitude,latitude) of all the …\nReturn the positions (longitude,latitude) of all the …\nReturn the members of a sorted set populated with …\nReturn the members of a sorted set populated with …\nThis command is exactly like GEORADIUS with the sole …\nThis command is exactly like GEORADIUS with the sole …\nReturn the members of a sorted set populated with …\nReturn the members of a sorted set populated with …\nThis command is like GEOSEARCH, but stores the result in …\nThis command is like GEOSEARCH, but stores the result in …\nRead a value from the server.\nRead a value from the server.\nReturn the ip and port number of the master with that name.\nReturn the ip and port number of the master with that name.\nGet the value of key and delete the key. This command is …\nGet the value of key and delete the key. This command is …\nReturns the substring of the string value stored at <code>key</code> …\nReturns the substring of the string value stored at <code>key</code> …\nAtomically sets <code>key</code> to <code>value</code> and returns the old value …\nAtomically sets <code>key</code> to <code>value</code> and returns the old value …\nWhether the client has a reconnection policy.\nWhether the client has a reconnection policy.\nRemoves the specified fields from the hash stored at <code>key</code>.\nRemoves the specified fields from the hash stored at <code>key</code>.\nSwitch to a different protocol, optionally authenticating …\nReturns if <code>field</code> is an existing field in the hash stored …\nReturns if <code>field</code> is an existing field in the hash stored …\nReturns the value associated with <code>field</code> in the hash stored …\nReturns the value associated with <code>field</code> in the hash stored …\nReturns all fields and values of the hash stored at <code>key</code>.\nReturns all fields and values of the hash stored at <code>key</code>.\nIncrements the number stored at <code>field</code> in the hash stored …\nIncrements the number stored at <code>field</code> in the hash stored …\nIncrement the specified <code>field</code> of a hash stored at <code>key</code>, and …\nIncrement the specified <code>field</code> of a hash stored at <code>key</code>, and …\nReturns all field names in the hash stored at <code>key</code>.\nReturns all field names in the hash stored at <code>key</code>.\nReturns the number of fields contained in the hash stored …\nReturns the number of fields contained in the hash stored …\nReturns the values associated with the specified <code>fields</code> in …\nReturns the values associated with the specified <code>fields</code> in …\nSets the specified fields to their respective values in …\nSets the specified fields to their respective values in …\nWhen called with just the <code>key</code> argument, return a random …\nWhen called with just the <code>key</code> argument, return a random …\nSets fields in the hash stored at <code>key</code> to their provided …\nSets fields in the hash stored at <code>key</code> to their provided …\nSets <code>field</code> in the hash stored at <code>key</code> to <code>value</code>, only if …\nSets <code>field</code> in the hash stored at <code>key</code> to <code>value</code>, only if …\nReturns the string length of the value associated with …\nReturns the string length of the value associated with …\nReturns all values in the hash stored at <code>key</code>.\nReturns all values in the hash stored at <code>key</code>.\nThe unique ID identifying this client and underlying …\nThe unique ID identifying this client and underlying …\nIncrements the number stored at <code>key</code> by one. If the key …\nIncrements the number stored at <code>key</code> by one. If the key …\nIncrements the number stored at <code>key</code> by <code>val</code>. If the key …\nIncrements the number stored at <code>key</code> by <code>val</code>. If the key …\nIncrement the string representing a floating point number …\nIncrement the string representing a floating point number …\nRead info about the server.\nRead info about the server.\nReturn cached INFO output from masters and replicas.\nReturn cached INFO output from masters and replicas.\nInitialize a new routing and connection task and wait for …\nInitialize a new routing and connection task and wait for …\nSubscribe to invalidation messages from the server(s).\nSubscribe to invalidation messages from the server(s).\nWhether the client is connected to a cluster.\nWhether the client is connected to a cluster.\nWhether all underlying connections are healthy.\nWhether all underlying connections are healthy.\nWhether the client will automatically pipeline commands.\nWhether the client will automatically pipeline commands.\nAppend the json values into the array at path after the …\nAppend the json values into the array at path after the …\nSearch for the first occurrence of a JSON value in an …\nSearch for the first occurrence of a JSON value in an …\nInsert the json values into the array at path before the …\nInsert the json values into the array at path before the …\nReport the length of the JSON array at path in key.\nReport the length of the JSON array at path in key.\nRemove and return an element from the index in the array\nRemove and return an element from the index in the array\nTrim an array so that it contains only the specified …\nTrim an array so that it contains only the specified …\nClear container values (arrays/objects) and set numeric …\nClear container values (arrays/objects) and set numeric …\nReport a value’s memory usage in bytes\nReport a value’s memory usage in bytes\nDelete a value.\nDelete a value.\nReturn the value at path in JSON serialized form.\nReturn the value at path in JSON serialized form.\nMerge a given JSON value into matching paths.\nMerge a given JSON value into matching paths.\nReturn the values at path from multiple key arguments.\nReturn the values at path from multiple key arguments.\nSet or update one or more JSON values according to the …\nSet or update one or more JSON values according to the …\nIncrement the number value stored at path by number\nIncrement the number value stored at path by number\nReturn the keys in the object that’s referenced by path.\nReturn the keys in the object that’s referenced by path.\nReport the number of keys in the JSON object at path in …\nReport the number of keys in the JSON object at path in …\nReturn the JSON in key in Redis serialization protocol …\nReturn the JSON in key in Redis serialization protocol …\nSet the JSON value at path in key.\nSet the JSON value at path in key.\nAppend the json-string values to the string at path.\nAppend the json-string values to the string at path.\nReport the length of the JSON String at path in key.\nReport the length of the JSON String at path in key.\nToggle a Boolean value stored at path.\nToggle a Boolean value stored at path.\nReport the type of JSON value at path.\nReport the type of JSON value at path.\nListen for keyspace and keyevent notifications on the …\nReturn the UNIX TIME of the last DB save executed with …\nReturn the UNIX TIME of the last DB save executed with …\nRuns the longest common subsequence algorithm on two keys.\nRuns the longest common subsequence algorithm on two keys.\nReturns the element at index in the list stored at key.\nReturns the element at index in the list stored at key.\nInserts element in the list stored at key either before or …\nInserts element in the list stored at key either before or …\nReturns the length of the list stored at key.\nReturns the length of the list stored at key.\nAtomically returns and removes the first/last element …\nAtomically returns and removes the first/last element …\nPops one or more elements from the first non-empty list …\nPops one or more elements from the first non-empty list …\nRemoves and returns the first elements of the list stored …\nRemoves and returns the first elements of the list stored …\nThe command returns the index of matching elements inside …\nThe command returns the index of matching elements inside …\nInsert all the specified values at the head of the list …\nInsert all the specified values at the head of the list …\nInserts specified values at the head of the list stored at …\nInserts specified values at the head of the list stored at …\nReturns the specified elements of the list stored at <code>key</code>.\nReturns the specified elements of the list stored at <code>key</code>.\nRemoves the first <code>count</code> occurrences of elements equal to …\nRemoves the first <code>count</code> occurrences of elements equal to …\nSets the list element at <code>index</code> to <code>element</code>.\nSets the list element at <code>index</code> to <code>element</code>.\nTrim an existing list so that it will contain only the …\nTrim an existing list so that it will contain only the …\nShow the state and info of the specified master.\nShow the state and info of the specified master.\nShow a list of monitored masters and their state.\nShow a list of monitored masters and their state.\nThe MEMORY DOCTOR command reports about different …\nThe MEMORY DOCTOR command reports about different …\nThe MEMORY MALLOC-STATS command provides an internal …\nThe MEMORY MALLOC-STATS command provides an internal …\nThe MEMORY PURGE command attempts to purge dirty pages so …\nThe MEMORY PURGE command attempts to purge dirty pages so …\nThe MEMORY STATS command returns an Array reply about the …\nThe MEMORY STATS command returns an Array reply about the …\nThe MEMORY USAGE command reports the number of bytes that …\nThe MEMORY USAGE command reports the number of bytes that …\nListen for messages on the publish-subscribe interface.\nReturns the values of all specified keys. For every key …\nReturns the values of all specified keys. For every key …\nStart Sentinel’s monitoring.\nStart Sentinel’s monitoring.\nSets the given keys to their respective values.\nSets the given keys to their respective values.\nSets the given keys to their respective values. MSETNX …\nSets the given keys to their respective values. MSETNX …\nEnter a MULTI block, executing subsequent commands as a …\nEnter a MULTI block, executing subsequent commands as a …\nReturn the ID of the Sentinel instance.\nReturn the ID of the Sentinel instance.\nRead the number of known primary cluster nodes, or <code>0</code> if …\nRead the number of known primary cluster nodes, or <code>0</code> if …\nSpawn one task that listens for all connection management …\nSpawn a task that runs the provided function on each …\nSpawn a task that runs the provided function on each …\nSpawn a task that processes invalidation messages from the …\nSpawn a task that processes invalidation messages from the …\nSpawn a task that runs the provided function on each …\nSpawn a task that runs the provided function on each …\nSpawn a task that runs the provided function on each …\nSpawn a task that runs the provided function whenever the …\nThis command returns information about pending scripts.\nThis command returns information about pending scripts.\nRead the PerformanceConfig associated with this client.\nRead the PerformanceConfig associated with this client.\nRemove the existing timeout on a key, turning the key from …\nRemove the existing timeout on a key, turning the key from …\nThis command works exactly like EXPIRE but the time to …\nThis command works exactly like EXPIRE but the time to …\nPEXPIREAT has the same effect and semantic as EXPIREAT, …\nPEXPIREAT has the same effect and semantic as EXPIREAT, …\nAdds all the element arguments to the HyperLogLog data …\nAdds all the element arguments to the HyperLogLog data …\nWhen called with a single key, returns the approximated …\nWhen called with a single key, returns the approximated …\nMerge multiple HyperLogLog values into an unique value …\nMerge multiple HyperLogLog values into an unique value …\nPing the Redis server.\nPing the Redis server.\nRead the RESP version used by the client when …\nRead the RESP version used by the client when …\nSubscribes the client to the given patterns.\nSubscribes the client to the given patterns.\nReturns the remaining time to live of a key that has a …\nReturns the remaining time to live of a key that has a …\nPublish a message on the PubSub interface, returning the …\nPublish a message on the PubSub interface, returning the …\nLists the currently active channels.\nLists the currently active channels.\nReturns the number of unique patterns that are subscribed …\nReturns the number of unique patterns that are subscribed …\nReturns the number of subscribers (exclusive of clients …\nReturns the number of subscribers (exclusive of clients …\nLists the currently active shard channels.\nLists the currently active shard channels.\nReturns the number of subscribers for the specified shard …\nReturns the number of subscribers for the specified shard …\nUnsubscribes the client from the given patterns, or from …\nUnsubscribes the client from the given patterns, or from …\nClose the connection to the Redis server. The returned …\nClose the connection to the Redis server. The returned …\nReturn a random key from the currently selected database.\nReturn a random key from the currently selected database.\nRead latency metrics across all commands.\nRead latency metrics across all commands.\nRead network latency metrics across all commands.\nRead network latency metrics across all commands.\nRead the number of request redeliveries.\nRead the number of request redeliveries.\nRead request payload size metrics across all commands.\nRead request payload size metrics across all commands.\nRead response payload size metrics across all commands.\nRead response payload size metrics across all commands.\nListen for reconnection notifications.\nStop Sentinel’s monitoring.\nStop Sentinel’s monitoring.\nRenames <code>source</code> key to <code>destination</code>.\nRenames <code>source</code> key to <code>destination</code>.\nRenames <code>source</code> key to <code>destination</code> if <code>destination</code> does not …\nRenames <code>source</code> key to <code>destination</code> if <code>destination</code> does not …\nShow a list of replicas for this master, and their state.\nShow a list of replicas for this master, and their state.\nThis command will reset all the masters with matching name.\nThis command will reset all the masters with matching name.\nCreate a key associated with a value that is obtained by …\nCreate a key associated with a value that is obtained by …\nRemoves and returns the last elements of the list stored …\nRemoves and returns the last elements of the list stored …\nAtomically returns and removes the last element (tail) of …\nAtomically returns and removes the last element (tail) of …\nInsert all the specified values at the tail of the list …\nInsert all the specified values at the tail of the list …\nInserts specified values at the tail of the list stored at …\nInserts specified values at the tail of the list stored at …\nAdd the specified members to the set stored at <code>key</code>.\nAdd the specified members to the set stored at <code>key</code>.\nReturns the set cardinality (number of elements) of the …\nReturns the set cardinality (number of elements) of the …\nSet the debug mode for subsequent scripts executed with …\nSet the debug mode for subsequent scripts executed with …\nReturns information about the existence of the scripts in …\nReturns information about the existence of the scripts in …\nFlush the Lua scripts cache.\nFlush the Lua scripts cache.\nA clustered variant of script_flush that flushes the …\nA clustered variant of script_flush that flushes the …\nKills the currently executing Lua script, assuming no …\nKills the currently executing Lua script, assuming no …\nA clustered variant of the script_kill command that issues …\nA clustered variant of the script_kill command that issues …\nLoad a script into the scripts cache, without executing …\nLoad a script into the scripts cache, without executing …\nA clustered variant of script_load that loads the script …\nA clustered variant of script_load that loads the script …\nReturns the members of the set resulting from the …\nReturns the members of the set resulting from the …\nThis command is equal to SDIFF, but instead of returning …\nThis command is equal to SDIFF, but instead of returning …\nSelect the database this client should use.\nSelect the database this client should use.\nRead the set of known sentinel nodes.\nRead the set of known sentinel nodes.\nRead the primary Redis server identifier returned from the …\nRead the primary Redis server identifier returned from the …\nShow a list of sentinel instances for this master, and …\nShow a list of sentinel instances for this master, and …\nRead the server version, if known.\nRead the server version, if known.\nSet a value with optional NX|XX, EX|PX|EXAT|PXAT|KEEPTTL, …\nSet a value with optional NX|XX, EX|PX|EXAT|PXAT|KEEPTTL, …\nSet Sentinel’s monitoring configuration.\nSet Sentinel’s monitoring configuration.\nOverride the DNS resolution logic for the client.\nOverride the DNS resolution logic for the client.\nOverwrites part of the string stored at <code>key</code>, starting at …\nOverwrites part of the string stored at <code>key</code>, starting at …\nShut down the server and quit the client.\nShut down the server and quit the client.\nThis command simulates different Sentinel crash scenarios.\nThis command simulates different Sentinel crash scenarios.\nReturns the members of the set resulting from the …\nReturns the members of the set resulting from the …\nThis command is equal to SINTER, but instead of returning …\nThis command is equal to SINTER, but instead of returning …\nReturns if <code>member</code> is a member of the set stored at <code>key</code>.\nReturns if <code>member</code> is a member of the set stored at <code>key</code>.\nThis command is used to read the slow queries log.\nThis command is used to read the slow queries log.\nThis command is used to read length of the slow queries …\nThis command is used to read length of the slow queries …\nThis command is used to reset the slow queries log.\nThis command is used to reset the slow queries log.\nReturns all the members of the set value stored at <code>key</code>.\nReturns all the members of the set value stored at <code>key</code>.\nReturns whether each member is a member of the set stored …\nReturns whether each member is a member of the set stored …\nMove <code>member</code> from the set at <code>source</code> to the set at …\nMove <code>member</code> from the set at <code>source</code> to the set at …\nReturns or stores the elements contained in the list, set …\nReturns or stores the elements contained in the list, set …\nRead-only variant of the SORT command. It is exactly like …\nRead-only variant of the SORT command. It is exactly like …\nRemoves and returns one or more random members from the …\nRemoves and returns one or more random members from the …\nPosts a message to the given shard channel.\nPosts a message to the given shard channel.\nWhen called with just the key argument, return a random …\nWhen called with just the key argument, return a random …\nRemove the specified members from the set stored at <code>key</code>.\nRemove the specified members from the set stored at <code>key</code>.\nSubscribes the client to the specified shard channels.\nSubscribes the client to the specified shard channels.\nSend the CLIENT TRACKING command to all connected servers, …\nSend the CLIENT TRACKING command to all connected servers, …\nRead the state of the underlying connection(s).\nRead the state of the underlying connection(s).\nDisable client tracking on all connections.\nDisable client tracking on all connections.\nReturns the length of the string value stored at key. An …\nReturns the length of the string value stored at key. An …\nSubscribe to a channel on the publish-subscribe interface.\nSubscribe to a channel on the publish-subscribe interface.\nReturns the members of the set resulting from the union of …\nReturns the members of the set resulting from the union of …\nThis command is equal to SUNION, but instead of returning …\nThis command is equal to SUNION, but instead of returning …\nUnsubscribes the client from the given shard channels, or …\nUnsubscribes the client from the given shard channels, or …\nUpdate the cached cluster state and add or remove any …\nUpdate the cached cluster state and add or remove any …\nRead and consume latency metrics, resetting their values …\nRead and consume latency metrics, resetting their values …\nRead and consume network latency metrics, resetting their …\nRead and consume network latency metrics, resetting their …\nRead and reset the number of request redeliveries.\nRead and reset the number of request redeliveries.\nRead and consume request payload size metrics, resetting …\nRead and consume request payload size metrics, resetting …\nRead and consume response payload size metrics, resetting …\nRead and consume response payload size metrics, resetting …\nAppend a sample to a time series.\nAppend a sample to a time series.\nUpdate the retention, chunk size, duplicate policy, and …\nUpdate the retention, chunk size, duplicate policy, and …\nCreate a new time series.\nCreate a new time series.\nCreate a compaction rule.\nCreate a compaction rule.\nDecrease the value of the sample with the maximum existing …\nDecrease the value of the sample with the maximum existing …\nDelete all samples between two timestamps for a given time …\nDelete all samples between two timestamps for a given time …\nDelete a compaction rule.\nDelete a compaction rule.\nGet the sample with the highest timestamp from a given …\nGet the sample with the highest timestamp from a given …\nIncrease the value of the sample with the maximum existing …\nIncrease the value of the sample with the maximum existing …\nReturn information and statistics for a time series.\nReturn information and statistics for a time series.\nAppend new samples to one or more time series.\nAppend new samples to one or more time series.\nGet the sample with the highest timestamp from each time …\nGet the sample with the highest timestamp from each time …\nQuery a range across multiple time series by filters in …\nQuery a range across multiple time series by filters in …\nQuery a range across multiple time series by filters in …\nQuery a range across multiple time series by filters in …\nGet all time series keys matching a filter list.\nGet all time series keys matching a filter list.\nQuery a range in forward direction.\nQuery a range in forward direction.\nQuery a range in reverse direction.\nQuery a range in reverse direction.\nReturns the remaining time to live of a key that has a …\nReturns the remaining time to live of a key that has a …\nA convenience function to unblock any blocked connection …\nA convenience function to unblock any blocked connection …\nUnlinks the specified keys. A key is ignored if it does …\nUnlinks the specified keys. A key is ignored if it does …\nReceive a message when the client initiates a reconnection …\nUnsubscribe from a channel on the PubSub interface.\nUnsubscribe from a channel on the PubSub interface.\nFlushes all the previously watched keys for a transaction.\nFlushes all the previously watched keys for a transaction.\nUpdate the internal PerformanceConfig in place with new …\nUpdate the internal PerformanceConfig in place with new …\nWhether the client uses the sentinel interface.\nWhether the client uses the sentinel interface.\nThis command blocks the current client until all the …\nThis command blocks the current client until all the …\nWait for the result of the next connection attempt.\nWait for the result of the next connection attempt.\nMarks the given keys to be watched for conditional …\nMarks the given keys to be watched for conditional …\nCustomize various configuration options on commands.\nCustomize various configuration options on commands.\nRemove one or more messages from the Pending Entries List …\nRemove one or more messages from the Pending Entries List …\nAppends the specified stream entry to the stream at the …\nAppends the specified stream entry to the stream at the …\nThis command transfers ownership of pending stream entries …\nThis command transfers ownership of pending stream entries …\nThis command transfers ownership of pending stream entries …\nThis command transfers ownership of pending stream entries …\nIn the context of a stream consumer group, this command …\nIn the context of a stream consumer group, this command …\nA variation of xclaim with a less verbose return type.\nA variation of xclaim with a less verbose return type.\nRemoves the specified entries from a stream, and returns …\nRemoves the specified entries from a stream, and returns …\nThis command creates a new consumer group uniquely …\nThis command creates a new consumer group uniquely …\nCreate a consumer named <code>consumername</code> in the consumer group …\nCreate a consumer named <code>consumername</code> in the consumer group …\nDelete a consumer named <code>consumername</code> in the consumer group …\nDelete a consumer named <code>consumername</code> in the consumer group …\nCompletely destroy a consumer group.\nCompletely destroy a consumer group.\nSet the last delivered ID for a consumer group.\nSet the last delivered ID for a consumer group.\nThis command returns the list of consumers that belong to …\nThis command returns the list of consumers that belong to …\nThis command returns the list of all consumers groups of …\nThis command returns the list of all consumers groups of …\nThis command returns information about the stream stored …\nThis command returns information about the stream stored …\nReturns the number of entries inside a stream.\nReturns the number of entries inside a stream.\nInspect the list of pending messages in a consumer group.\nInspect the list of pending messages in a consumer group.\nThe command returns the stream entries matching a given …\nThe command returns the stream entries matching a given …\nReturn the stream entries matching the provided range of …\nReturn the stream entries matching the provided range of …\nRead data from one or multiple streams, only returning …\nRead data from one or multiple streams, only returning …\nRead data from one or multiple streams, only returning …\nRead data from one or multiple streams, only returning …\nA special version of the <code>XREAD</code> command with support for …\nA special version of the <code>XREAD</code> command with support for …\nA special version of the <code>XREAD</code> command with support for …\nA special version of the <code>XREAD</code> command with support for …\nSimilar to <code>XRANGE</code>, but with the results returned in …\nSimilar to <code>XRANGE</code>, but with the results returned in …\nSimilar to <code>XRANGE</code>, but with the results returned in …\nSimilar to <code>XRANGE</code>, but with the results returned in …\nTrims the stream by evicting older entries (entries with …\nTrims the stream by evicting older entries (entries with …\nAdds all the specified members with the specified scores …\nAdds all the specified members with the specified scores …\nReturns the sorted set cardinality (number of elements) of …\nReturns the sorted set cardinality (number of elements) of …\nReturns the number of elements in the sorted set at <code>key</code> …\nReturns the number of elements in the sorted set at <code>key</code> …\nThis command is similar to ZDIFFSTORE, but instead of …\nThis command is similar to ZDIFFSTORE, but instead of …\nComputes the difference between the first and all …\nComputes the difference between the first and all …\nIncrements the score of <code>member</code> in the sorted set stored at …\nIncrements the score of <code>member</code> in the sorted set stored at …\nThis command is similar to ZINTERSTORE, but instead of …\nThis command is similar to ZINTERSTORE, but instead of …\nComputes the intersection of the sorted sets given by the …\nComputes the intersection of the sorted sets given by the …\nWhen all the elements in a sorted set are inserted with …\nWhen all the elements in a sorted set are inserted with …\nPops one or more elements, that are member-score pairs, …\nPops one or more elements, that are member-score pairs, …\nReturns the scores associated with the specified members …\nReturns the scores associated with the specified members …\nRemoves and returns up to count members with the highest …\nRemoves and returns up to count members with the highest …\nRemoves and returns up to count members with the lowest …\nRemoves and returns up to count members with the lowest …\nWhen called with just the key argument, return a random …\nWhen called with just the key argument, return a random …\nReturns the specified range of elements in the sorted set …\nReturns the specified range of elements in the sorted set …\nWhen all the elements in a sorted set are inserted with …\nWhen all the elements in a sorted set are inserted with …\nReturns all the elements in the sorted set at key with a …\nReturns all the elements in the sorted set at key with a …\nThis command is like ZRANGE, but stores the result in the …\nThis command is like ZRANGE, but stores the result in the …\nReturns the rank of member in the sorted set stored at <code>key</code>…\nReturns the rank of member in the sorted set stored at <code>key</code>…\nRemoves the specified members from the sorted set stored …\nRemoves the specified members from the sorted set stored …\nWhen all the elements in a sorted set are inserted with …\nWhen all the elements in a sorted set are inserted with …\nRemoves all elements in the sorted set stored at <code>key</code> with …\nRemoves all elements in the sorted set stored at <code>key</code> with …\nRemoves all elements in the sorted set stored at <code>key</code> with …\nRemoves all elements in the sorted set stored at <code>key</code> with …\nReturns the specified range of elements in the sorted set …\nReturns the specified range of elements in the sorted set …\nWhen all the elements in a sorted set are inserted with …\nWhen all the elements in a sorted set are inserted with …\nReturns all the elements in the sorted set at <code>key</code> with a …\nReturns all the elements in the sorted set at <code>key</code> with a …\nReturns the rank of <code>member</code> in the sorted set stored at <code>key</code>…\nReturns the rank of <code>member</code> in the sorted set stored at <code>key</code>…\nReturns the score of <code>member</code> in the sorted set at <code>key</code>.\nReturns the score of <code>member</code> in the sorted set at <code>key</code>.\nThis command is similar to ZUNIONSTORE, but instead of …\nThis command is similar to ZUNIONSTORE, but instead of …\nComputes the union of the sorted sets given by the …\nComputes the union of the sorted sets given by the …\nA mocking layer that buffers the commands internally and …\nAn implementation of a mocking layer that returns the …\nA wrapper type for the parts of an internal Redis command.\nAn interface for intercepting and processing Redis …\nA struct that implements some of the basic mapping …\nThe ordered list of arguments to the command.\nClear the inner map.\nClear the inner buffer.\nThe first word in the command string. For example:\nPerform a <code>DEL</code> operation.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nPerform a <code>GET</code> operation.\nRead a copy of the inner map.\nRead a copy of the internal command buffer without …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nRead the length of the internal buffer.\nCreate a new empty <code>SimpleMap</code>.\nCreate a new empty <code>Buffer</code>.\nPop a command from the back of the internal buffer.\nPop a command from the front of the internal buffer.\nIntercept and process a Redis command, returning any …\nIntercept and process an entire transaction. The provided …\nIntercept and process an entire transaction. The provided …\nPush a new command onto the back of the internal buffer.\nPush a new command onto the front of the internal buffer.\nPerform a <code>SET</code> operation.\nThe optional subcommand string (or second word) in the …\nTake the inner map.\nDrain and return the internal command buffer.\nA command parsed from a MONITOR stream.\nArguments passed to the command.\nThe host and port of the client that ran the command, or …\nThe command run by the server.\nThe database against which the command was run.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nRun the MONITOR command against the provided server.\nWhen the command was run on the server.\nA node was added to the cluster.\nAn aggregation operation used in <code>FT.AGGREGATE</code>.\nAggregate options for the zinterstore (and related) …\nAn aggregation policy to use with certain timeseries …\nThe ANY flag used on certain GEO commands.\nAn array of frames.\nAn ordered list of values.\nAn ordered list of values.\nThe auto-generated key symbol “*”.\nConfiguration options for backpressure features in the …\nBackpressure policies to apply when the max number of …\nA large number not representable as a <code>Number</code> or <code>Double</code>.\nA blob representing an error.\nA blob of bytes.\nWait to send the command until the blocked command …\nDescribes how the client should respond when a command is …\nA boolean type.\nA boolean value.\nA boolean value.\nA <code>BUCKETTIMESTAMP</code> argument in commands such as <code>TS.MRANGE</code>.\nA client and pool builder interface.\nThe BUSY prefix.\nA byte array value.\nA byte array value.\nOne chunk of a streaming blob.\nFilters provided to the CLIENT KILL command.\nThe type of clients to close.\nFilters for the CLIENT PAUSE command.\nArguments for the CLIENT REPLY command.\nThe state of the underlying connection to the Redis server.\nArguments to the CLIENT UNBLOCK command.\nA policy that determines how clustered clients initially …\nThe CLUSTERDOWN prefix.\nOptions for the CLUSTER FAILOVER command.\nA cluster hashing policy.\nA parsed response from the <code>CLUSTER INFO</code> command.\nFlags for the CLUSTER RESET command.\nThe cached view of the cluster used by the client to route …\nFlags for the CLUSTER SETSLOT command.\nThe state of the cluster from the <code>CLUSTER INFO</code> command.\nAn enum describing the possible ways in which a Redis …\nAlways use the endpoint(s) provided in the client’s …\nThe result from any of the <code>connect</code> functions showing the …\nConfiguration options related to the creation or …\nWait a constant amount of time between reconnect attempts, …\nA trait that can be used to override the credentials used …\nProvide a custom hash slot value.\nProvide a custom mapping from IP address to hostname to be …\nA case-sensitive prefix on an error message.\nUnix time (milliseconds since epoch).\nConfiguration for custom redis commands, primarily used …\nThe default amount of jitter when waiting to reconnect.\nThe parsed result of the MEMORY STATS command for a …\nReplace any IP addresses in the <code>CLUSTER SLOTS</code> response …\nA signed 64-bit floating point number.\nA double floating point number.\nA double floating point number.\nWait for all in-flight commands to finish before sending …\nThe duplicate policy used with certain timeseries commands.\nExpiration in seconds.\nExpiration time, in seconds.\nEquivalent to <code>-</code>.\nEncoding arguments for certain timeseries commands.\nReturn an error to the caller.\nExpiration options for the set command.\nOptions for certain expiration commands (<code>PEXPIRE</code>, etc).\nBackoff reconnection attempts exponentially, multiplying …\nHash the first string or bytes value in the arguments. …\nHash the first argument regardless of type.\nThe policy type for the FUNCTION RESTORE command.\nA trait used to convert various forms of RedisValue into …\nA trait used to convert RedisKey values to various types.\nArguments to the <code>FT.AGGREGATE</code> command.\nArguments to <code>FT.ALTER</code>.\nArguments for <code>FT.CREATE</code>.\nArguments to <code>FT.SEARCH</code>.\nAn individual function within a Library.\nPossible flags associated with a Function.\nA struct describing the longitude and latitude coordinates …\nA typed struct representing the full output of the …\nUnits for the GEO DIST command.\nA struct describing the value inside a GEO data structure.\nArguments equivalent to …\nA timestamp query used in commands such as <code>TS.MRANGE</code>.\nA struct representing <code>GROUPBY label REDUCE reducer</code> in …\nThe result of a HSCAN operation.\nA special frame type used when first connecting to the …\nA trait used for mapping IP addresses to hostnames when …\nIndex ranges (https://redis.io/commands/zrange#index-ranges…\nIndex arguments for <code>FT.CREATE</code>.\nShortcut for the <code>+</code> character.\nShortcut for the <code>+inf</code> range bound.\nOptions for the info command.\nAn integer value.\nAn integer value.\nInterrupt the blocked command by automatically sending …\nA client tracking invalidation message from the provided …\nDo not reset the TTL.\nAn event on the publish-subscribe interface describing a …\nThe direction to move elements in a *LMOVE command.\nEquivalent to <code>+</code>\nLexicographical ranges (…\nA helper struct for interacting with libraries and …\nA tuple of <code>(offset, count)</code> values for commands that allow …\nAn argument type equivalent to “[LIMIT count]”.\nBackoff reconnection attempts linearly, adding <code>delay</code> each …\nLocation flag for the <code>LINSERT</code> command.\nArguments to <code>LOAD</code> in <code>FT.AGGREGATE</code>.\nThe LOADING prefix.\nAn ID specified by the user such as “12345-0”.\nAn unordered map of key-value pairs.\nA map of key/value pairs, primarily used in RESP3 mode.\nA map of key/value pairs, primarily used in RESP3 mode.\nThe MASTERDOWN prefix.\nThe highest ID in a stream (“$”).\nThe parsed result of the MEMORY STATS command.\nA publish-subscribe message.\nA message from a <code>subscribe</code> command.\nThe kind of pubsub message.\nThe MISCONF prefix.\nA convenience struct for commands that take one or more …\nA convenience struct for functions that take one or more …\nOne or more IDs for elements in a stream.\nConvenience struct for commands that take 1 or more keys.\nOne or more ordered key-value pairs, typically used as an …\nConvenience interface for commands that take 1 or more …\nConvenience interface for commands that take 1 or more …\nConvenience struct for <code>ZINTERSTORE</code> and <code>ZUNIONSTORE</code> when …\nConvenience struct for the <code>ZADD</code> command to accept 1 or …\nShortcut for the <code>-inf</code> range bound.\nShortcut for the <code>-</code> character.\nFor <code>XREADGROUP</code>, only return new IDs (“&gt;”).\nThe NOREPLICAS prefix.\nNo value.\nDo not modify or replace hostnames or IP addresses in the …\nThe server’s current time, equivalent to “*”.\nA null type.\nA <code>nil</code> value.\nA <code>nil</code> value.\nA signed 64-bit integer.\nHash the value with the provided offset in the arguments …\nOptions to configure or overwrite for individual commands.\nOrdering options for the ZADD (and related) commands.\nA message from a pattern <code>psubscribe</code> command.\nExpiration in milliseconds.\nExpiration time, in milliseconds.\nThe type of results from the scan operation.\nConfiguration options that can affect the performance of …\nOut-of-band data.\nA special value used to indicate a MULTI block command was …\nA special value used to indicate a MULTI block command was …\nUse a random node in the cluster.\nA struct representing …\nThe READONLY prefix, which can happen if a primary node is …\nHash slots were rebalanced across the cluster and/or local …\nSpecial errors that can trigger reconnection logic, which …\nThe type of reconnection policy to use. This will apply to …\nConfiguration options for a <code>RedisClient</code>.\nA key in Redis.\nA map of <code>(RedisKey, RedisValue)</code> pairs.\nA value used in a Redis command.\nThe kind of value from Redis.\nA <code>REDUCER</code> argument in commands such as <code>TS.MRANGE</code>.\n<code>GROUPBY</code> reducer functions.\nA node was removed from the cluster.\nConfiguration options for replica node connections.\nAn interface used to filter the list of available replica …\nA trait that can be used to override DNS resolution logic.\nShorthand for the result of commands such as <code>MGET</code>, <code>MRANGE</code>, …\nA RESP3 frame that uses Bytes and Str as the underlying …\nThe RESP3 equivalent of Resp2TimeSeriesValues.\nThe RESP version used in the <code>HELLO</code> request.\nA message from a sharded <code>ssubscribe</code> command.\nThe result of a SSCAN operation.\nThe result of a SCAN operation.\nThe types of values supported by the type command.\nAn interface for interacting with the results of a scan …\nScore ranges (https://redis.io/commands/zrange#score-ranges…\nAn interface for caching and running lua scripts.\nFlags for the SCRIPT DEBUG command.\nA search field with an optional property.\nArguments for <code>FILTER</code> in <code>FT.SEARCH</code>.\nArguments for <code>GEOFILTER</code> in <code>FT.SEARCH</code>.\nArguments used in <code>HIGHLIGHT</code> values.\nArguments for <code>PARAMS</code> in <code>FT.AGGREGATE</code>.\n<code>REDUCE</code> arguments in <code>FT.AGGREGATE</code>.\nArguments for <code>SCHEMA</code> in <code>FT.CREATE</code>.\nOne of the available schema types used with <code>FT.CREATE</code> or …\nArguments for <code>SORTBY</code> in <code>FT.SEARCH</code>.\nArguments used in <code>SUMMARIZE</code> values.\nConfiguration options for sentinel clients.\nArguments for the <code>SENTINEL SIMULATE-FAILURE</code> command.\nState necessary to identify or connect to a server.\nConnection configuration for the Redis server.\nAn unordered collection of other frames with a uniqueness …\nOptions for the set command.\nArguments passed to the SHUTDOWN command.\nA small string representing an error.\nA small string.\nSleep for some amount of time before sending the next …\nA slot range and associated cluster node information from …\nThe output of an entry in the slow queries log.\nSome value of type <code>T</code>.\nThe sort order for redis commands that take or return a …\nArguments to <code>TERMS</code> in <code>FT.SPELLCHECK</code>,\nStats describing a distribution of samples.\nA string value.\nA string value.\nAn argument representing a string or number.\nTCP configuration options.\nA timestamp used in most timeseries commands.\nTLS configuration for a client.\nAn enum for interacting with various TLS libraries and …\nAn optional enum used to describe how the client should …\nAn <code>ON|OFF</code> flag used with client tracking commands.\nConfiguration options for tracing.\nConfiguration options used to detect potentially …\nTry connecting to nodes specified in both the client’s …\nA string to be displayed without any escaping or filtering.\n<strong>SemVer version</strong> as defined by https://semver.org.\nArguments for <code>WITHCURSOR</code> in <code>FT.AGGREGATE</code>.\nStream cap arguments for <code>XADD</code>, <code>XTRIM</code>, etc.\nThe MAXLEN or MINID argument for a stream cap.\nRepresentation for the “=” or “~” operator in <code>XADD</code>…\nStream ID arguments for <code>XADD</code>, <code>XREAD</code>, etc.\nA struct representing the trailing optional arguments to …\nA generic helper type describing the top level response …\nA generic helper type describing the ID and associated map …\n<code>MIN|MAX</code> arguments for <code>BZMPOP</code>, etc.\nA wrapper struct for a range bound in a sorted set command.\nAn index, score, lexicographical, or +|-|+inf|-inf range …\nThe type of range interval bound.\nThe result of a ZSCAN operation.\nOptions for the ZRANGE (and related) commands.\nAttempt to add attributes to the frame, extending the …\nReturn the length of the inner array if the value is an …\nAttempt to convert the value to a <code>bool</code>.\nRead the key as a byte slice.\nRead the inner value as an array of bytes, if possible.\nParse and return the key as a <code>Str</code> without copying the …\nRead the inner value as a <code>Str</code>.\nRead and return the inner value as a <code>f64</code>, if possible.\nParse the value as the response from <code>FUNCTION LIST</code>, …\nConvert the value into a <code>GeoPosition</code>, if possible.\nRead and return the inner value as a <code>i64</code>, if possible.\nRead the key as a str slice if it can be parsed as a UTF8 …\nRead the inner value as a string slice.\nRead the key as a lossy UTF8 string with …\nRead the inner value as a string, using …\nRead and return the inner <code>String</code> if the value is a string …\nRead and return the inner value as a <code>u64</code>, if possible.\nRead and return the inner value as a <code>usize</code>, if possible.\nRead the number of reconnection attempts.\nAutomatically send <code>CLIENT SETNAME</code> on each connection …\nWhether the client should automatically pipeline commands …\nConfiguration options for backpressure features in the …\nThe default behavior of the client when a command is sent …\nWhether the command should block the connection while …\nThe minimum size, in bytes, of frames that should be …\nThe default capacity used when creating broadcast channels …\nCreate a new client.\nCreate a new exclusive client pool.\nCreate a new client pool.\nCreate a new sentinel client.\nCreate a new subscriber client.\nWhether to send <code>CLIENT CACHING yes|no</code> before the command.\nWhether the value can be hashed.\nThe channel on which the message was sent.\nThe amount of time to wait after a <code>MOVED</code> error is received …\nHash the key to find the associated cluster hash slot.\nThe cluster hashing policy to use, if applicable.\nThe cluster hashing policy to use, if any.\nThe cluster node that should receive the command.\nRead the <code>host:port</code> of the cluster node that owns the key …\nThe command name, sent directly to the server.\nCompare the major, minor, patch, and pre-release value of …\nThe number of times a command can fail with a replica …\nThe timeout to apply when attempting to create a new TCP …\nThe TLS connector from either <code>native-tls</code> or <code>rustls</code>.\nAttempt to convert the key to any type that implements …\nAttempt to convert this value to any value that implements …\nA lightweight function to create a Redis client from the …\nAn optional credential provider callback interface.\nRead the cursor returned from the last scan operation.\nAn optional database number that the client will …\nCreate a new builder instance with default config values …\nCreate a centralized config with default settings for a …\nCreate a new builder instance with default config values …\nCreate a clustered config with the same defaults as …\nAn optional timeout to apply to all commands.\nCreate a default TLS connector from the <code>native-tls</code> module.\nCreate a default TLS connector with the <code>rustls</code> module with …\nCreate a new <code>Sleep</code> policy with the legacy default values.\nSet the <code>tracing::Level</code> of spans under <code>partial-tracing</code> …\nWhether to disable the automatic backpressure features …\nDisable the <code>CLUSTER INFO</code> health check when initializing …\nWhether to enable tracing for this client.\nThe end of the hash slot range.\nSend <code>EVALSHA</code> to the server with the provided arguments.\nSend <code>EVALSHA</code> to the server with the provided arguments. …\nSet the non-null values from <code>other</code> onto <code>self</code>.\nWhether the client should return an error if it cannot …\nWhether the command should fail quickly if the connection …\nSend the fcall command via the provided client.\nSend the fcall_ro command via the provided client.\nRead the username and password that should be used in the …\nReturns whether the replica node mapping can be used when …\nReturns whether the replica node mapping can be used when …\nAn optional interface for filtering available replica …\nFind the key to hash with the provided arguments.\nRead the flags associated with the function.\nFlatten adjacent nested arrays to the provided depth.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreate a new routing table from the result of the …\nCreate a new <code>Library</code> with the provided code, loading it on …\nCreate a new builder instance from the provided client …\nCreate a new <code>Script</code> from a lua hash.\nCreate a new <code>Script</code> from a lua script.\nCreate a new <code>Library</code> with the associated name, inspecting …\nParse the value with context from the calling command.\nCreate a new <code>RedisKey</code> from static bytes without copying.\nCreate a new <code>RedisValue::Bytes</code> from a static byte slice …\nAn optimized way to convert from <code>&amp;&#39;static str</code> that avoids …\nCreate a new <code>RedisKey</code> from a <code>&amp;&#39;static str</code> without copying.\nCreate a new <code>RedisValue::String</code> from a static <code>str</code> without …\nParse the string representation of the flag.\nParse a URL string into a <code>RedisConfig</code>.\nCreate a centralized <code>RedisConfig</code> struct from a URL.\nCreate a clustered <code>RedisConfig</code> struct from a URL.\nCreate a sentinel <code>RedisConfig</code> struct from a URL.\nCreate a <code>RedisConfig</code> from a URL that connects via a Unix …\nSet the <code>tracing::Level</code> of spans under <code>full-tracing</code> feature.\nRead the functions contained within this library.\nRead the client config.\nRead the connection config.\nRead the performance config.\nRead the reconnection policy.\nRead the sentinel client config.\nFind the primary server that owns the provided hash slot.\nWhether the scan call will continue returning results. If …\nHash the provided arguments.\nCalculate the cluster hash slot for the provided key.\nThe hostname or IP address for the server.\nThe hostname for the sentinel node.\nThe hostname modification or mapping policy to use when …\nRead the server hosts or sentinel hosts if using the …\nThe internal ID assigned by the server.\nWhether the client should ignore errors from replicas that …\nRead the inner <code>Bytes</code> struct.\nTake the inner <code>HashMap</code>.\nThe timeout to apply when sending internal commands such …\nThe frequency at which the client checks for unresponsive …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConvert this value to an array if it’s an array or map.\nRead the inner bytes making up the key.\nConvert the value into a <code>Bytes</code> view.\nRead and return the inner data as a <code>Str</code> from the <code>bytes</code> …\nParse the value as the response to any of the relevant GEO …\nAttempt to convert the value into an integer, returning …\nConvert the value to JSON.\nAttempt to convert this value to a Redis map if it’s an …\nConvert the value to an array of bytes, if possible.\nConvert the array value to a set, if possible.\nConvert the key to a UTF8 string, if possible.\nRead and return the inner <code>String</code> if the value is a string …\nA utility function to convert the response from <code>XAUTOCLAIM</code> …\nA utility function to convert the response from <code>XREAD</code> or …\nA utility function to convert the response from <code>XCLAIM</code>, …\nConvert a <code>RedisValue</code> to <code>Vec&lt;(RedisValue, f64)&gt;</code>, if …\nWhether the value is an array or map.\nWhether the value is an array.\nWhether the value is a boolean value or can be parsed as a …\nCheck if the value is an array of bytes.\nWhether the config is for a centralized server.\nWhether the config uses a clustered deployment.\nWhether the inner value is a double or can be parsed as a …\nCheck if the value is an integer.\nWhether the value is a <code>RedisMap</code>.\nWhether the value is a <code>RedisMap</code> or an array with an even …\nCheck if the value is null.\nWhether the value is a simple string OK value.\nCheck if the value is a <code>QUEUED</code> response.\nWhether the config is for a centralized server behind a …\nCheck if the value is a string.\nWhether the config uses a Unix socket.\nSet the TCP keepalive values.\nRead the type of the value without any associated data.\nThe type of message subscription.\nWhether the client should lazily connect to replica nodes.\nRead the number of hash slot ranges in the cluster.\nRead the number of (key, value) pairs in the map.\nSet the SO_LINGER value.\nCall <code>SCRIPT LOAD</code> on all the associated servers. This must …\nRead the lua script contents.\nMap the provided IP address to a hostname that should be …\nSet the max number of write attempts for a command.\nThe maximum number of times the client will attempt to …\nLimit the size of the internal in-memory command queue.\nThe maximum number of frames that will be fed to a socket …\nThe maximum number of in-flight commands (per connection) …\nThe maximum number of times the client will attempt to …\nSet the max number of cluster redirections to follow for a …\nIf provided, the amount of time a frame can wait without a …\nAn optional mocking layer to intercept and process …\nRead the name of the function.\nRead the name of the library.\nCreate <code>Version</code> with an empty pre-release and build …\nCreate a new <code>Server</code> from parts.\nCreate a new empty routing table.\nCreate a new empty map.\nCreate a new custom command.\nCreate a new <code>Function</code>.\nCreate a new centralized config with the provided host and …\nCreate a new clustered config with the provided set of …\nCreate a new reconnect policy with a constant backoff.\nCreate a new reconnect policy with an exponential backoff.\nCreate a new reconnect policy with a linear backoff.\nCreate a new <code>RedisValue</code> with the <code>OK</code> status.\nCreate a new sentinel config with the provided set of …\nCreate a new custom command specified by a <code>&amp;&#39;static str</code>.\nCreate a new server config for a connected Unix socket.\nCreate a new <code>Server</code> from parts with a TLS server name.\nMove on to the next page of results from the SCAN …\nCalculate the next delay, incrementing <code>attempts</code> in the …\nWhether to skip backpressure checks for a command.\nSet the TCP_NODELAY value.\nCreate <code>Version</code> by parsing from string representation.\nAn optional password for the client to use when …\nAn optional password for the client to use when …\nThe backpressure policy to apply when the max number of …\nThe port for the server.\nThe port on which the sentinel node is listening.\nPrint the contents of the routing table as a …\nThe primary server owner.\nWhether the client should use the associated primary node …\nRead a random primary node from the cluster cache.\nRead a random primary node hash slot range from the …\nErrors that should trigger reconnection logic.\nAn unexpected <code>NOAUTH</code> error is treated the same as a …\nConfigure the client to call fetch and send <code>AUTH</code> or <code>HELLO</code> …\nConfigure the client to call fetch and send <code>AUTH</code> or <code>HELLO</code> …\nConfiguration options for replica nodes.\nRead the replicas associated with the provided primary …\nReplica node owners.\nResolve a hostname.\nReturn a reference to the last page of results.\nThe server that sent the message.\nConnection configuration for the server(s).\nSet the ClusterDiscoveryPolicy, if possible.\nOverwrite the client config on the builder.\nOverwrite the connection config on the builder.\nSet the amount of jitter to add to each reconnect delay.\nOverwrite the performance config on the builder.\nOverwrite the reconnection policy on the builder.\nOverwrite the sentinel config on the builder.\nRead the SHA-1 hash for the script.\nRead the hash slot ranges in the cluster.\nThe start of the hash slot range.\nReplace this key with an empty byte array, returning the …\nReplace the value an empty map, returning the original …\nReplace this value with <code>RedisValue::Null</code>, returning the …\nTake ownership over the results of the SCAN operation. …\nTCP connection options.\nSet the timeout duration for a command.\nTLS configuration options.\nTLS configuration fields. If <code>None</code> the connection will not …\nThe server name used during the TLS handshake.\nCopy the frame contents into a new OwnedFrame.\nConvert to the string representation of the flag.\nTracing configuration options.\nWhether to enable tracing for this client.\nSet the IP_TTL value.\nRead a set of unique hash slots that each map to a …\nRead the set of unique primary nodes in the cluster.\nUnresponsive connection configuration options.\nAn optional ACL username for the client to use when …\nAn optional ACL username for the client to use when …\nWhether the client uses a <code>native-tls</code> connector.\nWhether the client uses a <code>rustls</code> connector.\nWhether the client uses TLS.\nThe message contents.\nThe protocol version to use when communicating with the …\nModify the client config in place, creating a new one with …\nModify the connection config in place, creating a new one …\nModify the performance config in place, creating a new one …\nModify the sentinel config in place, creating a new one …\nAn empty array is equivalent to <code>GROUPBY 0</code>\nDisable the backpressure scaling logic used to calculate …\nThe minimum amount of time to wait when applying …\nThe known cluster node <code>Server</code> identifiers.\nAn array of <code>Server</code> identifiers for each known sentinel …\nAn optional password for the client to use when …\nThe path to the Unix socket.\nThe cluster discovery policy to use when connecting or …\nThe <code>Server</code> identifier.\nThe service name for primary/main instances.\nAn optional ACL username for the client to use when …\nA convenience constant for <code>None</code> values used as generic …\nConvert an <code>f64</code> to a redis string, supporting “+inf” …\nGroup the provided arguments by their cluster hash slot.\nMap a key to the corresponding cluster key slot.\nConvert a redis string to an <code>f64</code>, supporting “+inf” …\nCalculate the SHA1 hash output as a hex string. This is …\nCreate a <code>Bytes</code> from static bytes without copying.\nCreate a <code>Str</code> from a static str slice without copying.")